name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.4'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.16.0 pillow

      - name: Disable Windows Defender for build
        run: |
          # Disable real-time monitoring temporarily to prevent false positives during build
          Add-MpPreference -ExclusionPath "${{ github.workspace }}\dist"
          Add-MpPreference -ExclusionProcess "pyinstaller.exe"
        shell: powershell

      - name: Get version
        id: version
        run: |
          $version = (Select-String -Path "src/constants.py" -Pattern 'APP_VERSION = "(.+)"').Matches.Groups[1].Value
          echo "version=v$version" >> $env:GITHUB_OUTPUT
        shell: powershell

      - name: Build Windows executable
        run: |
          python -m PyInstaller MornSteamUploadHelper_Windows.spec

      - name: Create ZIP archive
        run: |
          # Create ZIP file for distribution with version (entire folder for onedir)
          $version = "${{ steps.version.outputs.version }}"
          Compress-Archive -Path "dist\MornSteamUploadHelper\*" -DestinationPath "dist\MornSteamUploadHelper-$version-Windows.zip"

          # Calculate SHA256 hash for reference
          $hash = (Get-FileHash -Path "dist\MornSteamUploadHelper\MornSteamUploadHelper.exe" -Algorithm SHA256).Hash
          echo "Build SHA256: $hash"
          echo "Verify at: https://www.virustotal.com/gui/file/$hash"
        shell: powershell

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: MornSteamUploadHelper-Windows
          path: dist/MornSteamUploadHelper-*-Windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          version=$(grep 'APP_VERSION = ' src/constants.py | sed 's/APP_VERSION = "\(.*\)"/\1/')
          echo "version=v$version" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Build macOS app
        run: |
          chmod +x build_macos.command
          ./build_macos.command

      - name: Create DMG with Applications shortcut
        run: |
          # Wait for any running processes to finish
          sleep 2

          # Ensure no app processes are running
          pkill -9 -f MornSteamUploadHelper || true
          sleep 1

          # Create a temporary directory for DMG contents
          mkdir -p dmg_contents
          cp -r dist/MornSteamUploadHelper.app dmg_contents/
          ln -s /Applications dmg_contents/Applications

          # Create DMG with volume name and version
          version="${{ steps.version.outputs.version }}"
          hdiutil create -volname "MornSteamUploadHelper" \
            -srcfolder dmg_contents \
            -ov -format UDZO \
            "dist/MornSteamUploadHelper-${version}-macOS.dmg"

          # Clean up
          rm -rf dmg_contents

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: MornSteamUploadHelper-macOS
          path: dist/MornSteamUploadHelper-*-macOS.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version
        id: version
        run: |
          version=$(grep 'APP_VERSION = ' src/constants.py | sed 's/APP_VERSION = "\(.*\)"/\1/')
          echo "version=v$version" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/MornSteamUploadHelper-Windows/MornSteamUploadHelper-*-Windows.zip
            artifacts/MornSteamUploadHelper-macOS/MornSteamUploadHelper-*-macOS.dmg
          body: |
            ## MornSteamUploadHelper Release

            ### Downloads
            - **Windows**: `MornSteamUploadHelper-Windows.zip` (ZIPを解凍して実行してください)
            - **macOS**: `MornSteamUploadHelper.dmg`

            ### Windows版について
            ZIPファイルをダウンロード後、解凍してフォルダ内の `MornSteamUploadHelper.exe` を実行してください。
            ※ フォルダごと解凍してください（exeファイル単体では動作しません）

            ### Changes
            ${{ github.event.head_commit.message }}