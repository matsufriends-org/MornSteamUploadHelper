name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.4'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==6.16.0 pillow

      - name: Disable Windows Defender for build
        run: |
          # Disable real-time monitoring temporarily to prevent false positives during build
          Add-MpPreference -ExclusionPath "${{ github.workspace }}\dist"
          Add-MpPreference -ExclusionProcess "pyinstaller.exe"
        shell: powershell

      - name: Get version
        id: version
        run: |
          $version = (Select-String -Path "src/constants.py" -Pattern 'APP_VERSION = "(.+)"').Matches.Groups[1].Value
          echo "version=v$version" >> $env:GITHUB_OUTPUT
        shell: powershell

      - name: Build Windows executable
        run: |
          python -m PyInstaller --clean MornSteamUploadHelper_Windows.spec

      - name: Create ZIP archive
        run: |
          # Create ZIP file for distribution with version (entire folder for onedir)
          $version = "${{ steps.version.outputs.version }}"
          Compress-Archive -Path "dist\MornSteamUploadHelper\*" -DestinationPath "dist\MornSteamUploadHelper-$version-Windows.zip"

          # Calculate SHA256 hash for reference
          $hash = (Get-FileHash -Path "dist\MornSteamUploadHelper\MornSteamUploadHelper.exe" -Algorithm SHA256).Hash
          echo "Build SHA256: $hash"
          echo "Verify at: https://www.virustotal.com/gui/file/$hash"
        shell: powershell

      - name: Build Portable Windows version
        run: |
          $version = "${{ steps.version.outputs.version }}"

          # Download embedded Python
          $pythonUrl = "https://www.python.org/ftp/python/3.12.4/python-3.12.4-embed-amd64.zip"
          Invoke-WebRequest -Uri $pythonUrl -OutFile "python-embed.zip"

          # Create directory structure
          New-Item -ItemType Directory -Path "dist-portable\MornSteamUploadHelper-Portable" -Force
          New-Item -ItemType Directory -Path "dist-portable\MornSteamUploadHelper-Portable\app" -Force
          New-Item -ItemType Directory -Path "dist-portable\MornSteamUploadHelper-Portable\python-embed" -Force

          # Extract Python
          Expand-Archive -Path "python-embed.zip" -DestinationPath "dist-portable\MornSteamUploadHelper-Portable\python-embed" -Force
          Remove-Item "python-embed.zip"

          # Configure Python to use site-packages
          @"
          import site
          .
          Lib\site-packages
          "@ | Out-File -FilePath "dist-portable\MornSteamUploadHelper-Portable\python-embed\python312._pth" -Encoding ascii

          # Install pip
          Invoke-WebRequest -Uri "https://bootstrap.pypa.io/get-pip.py" -OutFile "get-pip.py"
          & "dist-portable\MornSteamUploadHelper-Portable\python-embed\python.exe" "get-pip.py"
          Remove-Item "get-pip.py"

          # Copy application files
          Copy-Item -Path "src" -Destination "dist-portable\MornSteamUploadHelper-Portable\app\src" -Recurse
          Copy-Item -Path "requirements.txt" -Destination "dist-portable\MornSteamUploadHelper-Portable\app\"
          Copy-Item -Path "img" -Destination "dist-portable\MornSteamUploadHelper-Portable\app\img" -Recurse -ErrorAction SilentlyContinue

          # Install dependencies
          & "dist-portable\MornSteamUploadHelper-Portable\python-embed\python.exe" -m pip install -r "dist-portable\MornSteamUploadHelper-Portable\app\requirements.txt" --target "dist-portable\MornSteamUploadHelper-Portable\python-embed\Lib\site-packages"

          # Create launcher
          @"
          @echo off
          REM Morn Steam Upload Helper - Portable Version
          cd /d "%~dp0"
          python-embed\python.exe app\src\main.py
          "@ | Out-File -FilePath "dist-portable\MornSteamUploadHelper-Portable\MornSteamUploadHelper.bat" -Encoding ascii

          # Create README
          @"
          # Morn Steam Upload Helper - Portable Version

          ## How to Run

          Simply double-click ``MornSteamUploadHelper.bat`` to start the application.

          ## Features

          - No Python installation required
          - No administrator rights needed
          - Portable - can run from USB drive
          - No Windows Defender false positives

          ## System Requirements

          - Windows 10/11 64-bit
          "@ | Out-File -FilePath "dist-portable\MornSteamUploadHelper-Portable\README.md" -Encoding utf8

          # Create ZIP
          Compress-Archive -Path "dist-portable\MornSteamUploadHelper-Portable\*" -DestinationPath "dist-portable\MornSteamUploadHelper-$version-Portable-Windows.zip" -Force
        shell: powershell

      - name: Upload Windows EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: MornSteamUploadHelper-Windows-EXE
          path: dist/MornSteamUploadHelper-*-Windows.zip

      - name: Upload Windows Portable artifact
        uses: actions/upload-artifact@v4
        with:
          name: MornSteamUploadHelper-Windows-Portable
          path: dist-portable/MornSteamUploadHelper-*-Portable-Windows.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: version
        run: |
          version=$(grep 'APP_VERSION = ' src/constants.py | sed 's/APP_VERSION = "\(.*\)"/\1/')
          echo "version=v$version" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow

      - name: Build macOS app
        run: |
          chmod +x build_macos.command
          ./build_macos.command

      - name: Create DMG with Applications shortcut
        run: |
          # Wait for any running processes to finish
          sleep 2

          # Ensure no app processes are running
          pkill -9 -f MornSteamUploadHelper || true
          sleep 1

          # Create a temporary directory for DMG contents
          mkdir -p dmg_contents
          cp -r dist/MornSteamUploadHelper.app dmg_contents/
          ln -s /Applications dmg_contents/Applications

          # Create DMG with volume name and version
          version="${{ steps.version.outputs.version }}"
          hdiutil create -volname "MornSteamUploadHelper" \
            -srcfolder dmg_contents \
            -ov -format UDZO \
            "dist/MornSteamUploadHelper-${version}-macOS.dmg"

          # Clean up
          rm -rf dmg_contents

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: MornSteamUploadHelper-macOS
          path: dist/MornSteamUploadHelper-*-macOS.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Get version
        id: version
        run: |
          version=$(grep 'APP_VERSION = ' src/constants.py | sed 's/APP_VERSION = "\(.*\)"/\1/')
          echo "version=v$version" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            artifacts/MornSteamUploadHelper-Windows-EXE/MornSteamUploadHelper-*-Windows.zip
            artifacts/MornSteamUploadHelper-Windows-Portable/MornSteamUploadHelper-*-Portable-Windows.zip
            artifacts/MornSteamUploadHelper-macOS/MornSteamUploadHelper-*-macOS.dmg
          body: |
            ## MornSteamUploadHelper Release

            ### Downloads

            #### Windows
            - **🎯 推奨: Portable版** - `MornSteamUploadHelper-Portable-Windows.zip`
              - Python不要、exeファイルなし、Windows Defenderの誤検知なし
              - ZIPを解凍して `MornSteamUploadHelper.bat` をダブルクリック
            - **EXE版** - `MornSteamUploadHelper-Windows.zip`
              - 従来のexeファイル版（Windows Defenderで警告が出る場合があります）

            #### macOS
            - **macOS版** - `MornSteamUploadHelper.dmg`

            ### Windows Portable版の使い方
            1. ZIPファイルをダウンロード
            2. 任意の場所に解凍（USBメモリでも可）
            3. `MornSteamUploadHelper.bat` をダブルクリックして起動

            ### Changes
            ${{ github.event.head_commit.message }}